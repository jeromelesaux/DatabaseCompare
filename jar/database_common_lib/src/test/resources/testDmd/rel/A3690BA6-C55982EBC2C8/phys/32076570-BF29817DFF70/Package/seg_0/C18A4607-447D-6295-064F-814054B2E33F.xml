<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PCK_CALCUL_FAE" id="C18A4607-447D-6295-064F-814054B2E33F" directorySegmentName="seg_0">
<sourceConnName>DEV57_AXIONEUSER_FACTU</sourceConnName>
<sourceObjSchema>AXIONEUSER_FACTU</sourceObjSchema>
<sourceObjName>PCK_CALCUL_FAE</sourceObjName>
<createdBy>AN.LEFEBVRE</createdBy>
<createdTime>2013-02-15 15:55:39 UTC</createdTime>
<generatorID>Généré par l&apos;utilisateur</generatorID>
<ownerDesignName>ST-SYS-SIB-BD_FCTPRO-000009-8 MCD-FACTUPRO V4.5.0</ownerDesignName>
<owner>4FCC3A6A-181E-A36A-613B-7868309493E2</owner>
<source>create or replace package AXIONEUSER_FACTU.PCK_CALCUL_FAE is&lt;br/&gt;/********************************************************************************&lt;br/&gt; * DESCRIPTION: Calcul FAE&lt;br/&gt; * NOM PROJET : &lt;br/&gt; * NOM OBJET  : &lt;br/&gt; *&lt;br/&gt; * Auteur : Guillaume Trompette&lt;br/&gt; *&lt;br/&gt; * Date   : 30/01/2013&lt;br/&gt; * Derniere mise a jour : &lt;br/&gt; *&lt;br/&gt; * e-mail : guillaume.trompette@axionesi.net&lt;br/&gt; *          &lt;br/&gt; *************************************************************************/&lt;br/&gt; --log&lt;br/&gt;  g_date                        VARCHAR2(8) := to_char( sysdate, &apos;YYYYMMDD&apos;);&lt;br/&gt;  g_Fichier_log                 VARCHAR2(40):= &apos;Calcul_FAE__&apos;||g_date||&apos;.log&apos;;&lt;br/&gt;  g_REP_CSV                     VARCHAR2(30) := &apos;REP_CSV&apos;;&lt;br/&gt;  C_DEFAULT_LOG_DIR             CONSTANT VARCHAR2(15) := &apos;DEFAULT_LOG_DIR&apos;;&lt;br/&gt;  g_log_handle                  AXIONEUSER_COMMUN.LOGGER.handle_type;&lt;br/&gt;  g_fic_highdeal                VARCHAR2(100) := &apos;FAE_HIGHDEAL&apos;;&lt;br/&gt;  C_Dti_Osen_Adsl_Non_Iru       CONSTANT Number := 1;&lt;br/&gt;  C_Dti_Osen_Sdsl_Non_Iru       CONSTANT Number := 2;&lt;br/&gt;  C_Dti_Osen_Fibre_Non_Iru      CONSTANT Number := 3;&lt;br/&gt;  C_Dti_Infra_Op_Non_Iru        CONSTANT Number := 4;&lt;br/&gt;  C_Dti_Osen_Iru                CONSTANT Number := 5;&lt;br/&gt;  C_Dti_Infra_Op_Iru            CONSTANT Number := 6;&lt;br/&gt;  C_Dti_Gp_Sfr                  CONSTANT Number := 7;&lt;br/&gt;  C_Dti_Gp_Bytel                CONSTANT Number := 8;&lt;br/&gt;  C_Dti_Osen_Adsl_Sfr           CONSTANT Number := 9;&lt;br/&gt;  C_Dti_Osen_Sdsl_Sfr           CONSTANT Number := 10;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;  PROCEDURE Chargement_FAE(Mois number,Annee number);&lt;br/&gt;  &lt;br/&gt;end pck_calcul_fae;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PCK_CALCUL_FAE" id="C18A4607-447D-6295-064F-814054B2E33F">
<sourceConnName>DEV57_AXIONEUSER_FACTU</sourceConnName>
<sourceObjSchema>AXIONEUSER_FACTU</sourceObjSchema>
<sourceObjName>PCK_CALCUL_FAE</sourceObjName>
<createdBy>AN.LEFEBVRE</createdBy>
<createdTime>2013-02-15 15:55:39 UTC</createdTime>
<generatorID>Généré par l&apos;utilisateur</generatorID>
<owner>4FCC3A6A-181E-A36A-613B-7868309493E2</owner>
<source>create or replace &lt;br/&gt;package body AXIONEUSER_FACTU.PCK_CALCUL_FAE is &lt;br/&gt;  &lt;br/&gt;  PROCEDURE p_ouv_session_log IS&lt;br/&gt;  BEGIN&lt;br/&gt;    g_log_handle := AXIONEUSER_COMMUN.LOGGER.session_start(AXIONEUSER_COMMUN.LOGGER.LOGGER_ALL, g_Fichier_log, C_DEFAULT_LOG_DIR);&lt;br/&gt;  EXCEPTION&lt;br/&gt;    WHEN OTHERS THEN&lt;br/&gt;      ROLLBACK;&lt;br/&gt;      Raise_application_error(-20099, chr(10)||&apos;Procédure : &quot;init&quot;. Prob. &apos;||chr(10) ||SQLERRM, TRUE);&lt;br/&gt;  END p_ouv_session_log;&lt;br/&gt;&lt;br/&gt;  PROCEDURE p_ferm_session_log IS&lt;br/&gt;  BEGIN&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.session_end(g_log_handle);&lt;br/&gt;  END p_ferm_session_log;&lt;br/&gt;  &lt;br/&gt;  Procedure Copie_Fichier_Highdeal(Fic_Highdeal Varchar2) IS&lt;br/&gt;  -- Copie du fichier source highdeal pour la table externe&lt;br/&gt;  Begin&lt;br/&gt;    utl_file.fcopy(g_REP_CSV,Fic_Highdeal, g_REP_CSV, g_fic_highdeal||&apos;.csv&apos;);&lt;br/&gt;  Exception&lt;br/&gt;  When Others Then&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur : &apos;|| SQLCODE || &apos; &apos; ||SQLERRM);&lt;br/&gt;    raise_application_error(-20107, &apos;Probleme fichier source highdeal&apos;);&lt;br/&gt;  End Copie_Fichier_Highdeal;&lt;br/&gt;  &lt;br/&gt;  Procedure Insert_SFR_SDSL_PRO(Mois Number,Annee Number) IS&lt;br/&gt;  lignes_inserees number;&lt;br/&gt;  ligne_rejetees number;&lt;br/&gt;  d_mois date;&lt;br/&gt;  err_sdsl exception;&lt;br/&gt;  &lt;br/&gt;  Cursor C_Sfr_Sdsl_Pro(d date) is&lt;br/&gt;  select dsp.nom_dsp DSP,&lt;br/&gt;       t1.FAI,&lt;br/&gt;       t1.TOT_ABO,&lt;br/&gt;       t1.TOT_FAS,&lt;br/&gt;       t1.TOT_RESIL,&lt;br/&gt;       t1.TOT_AUTRES,&lt;br/&gt;       t1.DATE_FACTURATION&lt;br/&gt;       from(&lt;br/&gt;          select NOM_DSP DSP,&lt;br/&gt;                 NOM_FAI FAI,&lt;br/&gt;                 TOT_ABO,&lt;br/&gt;                 TOT_FAS,&lt;br/&gt;                 TOT_RESIL,&lt;br/&gt;                 TOT_AUTRES,&lt;br/&gt;                 DATE_FACTURATION&lt;br/&gt;                 FROM (&lt;br/&gt;                        SELECT  NOM_DSP,NOM_FAI,DATE_FACTURATION,MONTANT_HT, (CASE TYPE_CHARGE&lt;br/&gt;                                                                        WHEN &apos;ABO&apos; THEN TYPE_CHARGE&lt;br/&gt;                                                                        WHEN &apos;Engagement ABO&apos; THEN TYPE_CHARGE&lt;br/&gt;                                                                        WHEN &apos;FAS&apos; THEN TYPE_CHARGE&lt;br/&gt;                                                                        ELSE &apos;AUTRES&apos;&lt;br/&gt;                                                                        END) as TYPE_CHARGES&lt;br/&gt;                        FROM T_FDSL_FACTURATION &lt;br/&gt;                        WHERE NOM_FAI=&apos;NEUF CEGETEL&apos;&lt;br/&gt;                        AND TYPE_TECHNO IN(&apos;SDSL&apos;,&apos;SHDSL&apos;)   &lt;br/&gt;                        AND DATE_FACTURATION= LAST_DAY(d)+1&lt;br/&gt;                        )&lt;br/&gt;                  pivot (SUM(MONTANT_HT)&lt;br/&gt;                          for TYPE_CHARGES IN (&apos;ABO&apos; as TOT_ABO,&apos;FAS&apos; as TOT_FAS,&apos;Engagement ABO&apos; as TOT_RESIL, &apos;AUTRES&apos; as TOT_AUTRES)&lt;br/&gt;                        ) ) t1&lt;br/&gt;        inner join s_com_map_nom_dsp map on map.nom_dsp = t1.dsp&lt;br/&gt;        inner join s_com_dsp dsp on dsp.id_dsp=map.id_com_dsp&lt;br/&gt;        where map.application = &apos;FACTU_SDSL_SFR&apos;&lt;br/&gt;        and dsp.type_dsp=&apos;DSP&apos;;&lt;br/&gt;&lt;br/&gt;  Begin&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Suppression des données dans T_FAE_SFR_SDSL_PRO&apos;);&lt;br/&gt;    delete from T_FAE_SFR_SDSL_PRO;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes effacées dans T_FAE_SFR_SDSL_PRO : &apos;||sql%rowcount);&lt;br/&gt;    &lt;br/&gt;    lignes_inserees :=0;&lt;br/&gt;    ligne_rejetees :=0;&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Chargement des données dans T_FAE_SFR_SDSL_PRO&apos;);&lt;br/&gt;    d_mois := to_date(&apos;01/&apos;||to_char(mois)||&apos;/&apos;||to_char(annee),&apos;dd/mm/yyyy&apos;);&lt;br/&gt;&lt;br/&gt;    for c in C_Sfr_Sdsl_Pro(d_mois) loop&lt;br/&gt;      Begin&lt;br/&gt;         INSERT&lt;br/&gt;          INTO T_FAE_SFR_SDSL_PRO&lt;br/&gt;            (&lt;br/&gt;              DSP,&lt;br/&gt;              FAI,&lt;br/&gt;              TOT_ABO,&lt;br/&gt;              TOT_FAS,&lt;br/&gt;              TOT_RESIL,&lt;br/&gt;              TOT_AUTRES,&lt;br/&gt;              DATE_FACTURATION&lt;br/&gt;            )&lt;br/&gt;            VALUES&lt;br/&gt;            (&lt;br/&gt;              c.DSP,&lt;br/&gt;              c.FAI,&lt;br/&gt;              c.TOT_ABO,&lt;br/&gt;              c.TOT_FAS,&lt;br/&gt;              c.TOT_RESIL,&lt;br/&gt;              c.TOT_AUTRES,&lt;br/&gt;              c.DATE_FACTURATION&lt;br/&gt;            );  &lt;br/&gt;        lignes_inserees := lignes_inserees +1;&lt;br/&gt;      EXCEPTION&lt;br/&gt;      WHEN OTHERS THEN&lt;br/&gt;       ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;       AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion pour dsp : &apos;||c.dsp||&apos; et fai : &apos;||c.fai||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;      END;&lt;br/&gt;    end loop;&lt;br/&gt;    &lt;br/&gt;    IF lignes_inserees=0 then&lt;br/&gt;      raise err_sdsl;&lt;br/&gt;    END IF;&lt;br/&gt;    &lt;br/&gt;    commit;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes insérées dans T_FAE_SFR_SDSL_PRO : &apos;||lignes_inserees);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes rejetées de T_FAE_SFR_SDSL_PRO : &apos;||ligne_rejetees);&lt;br/&gt;  Exception&lt;br/&gt;  When err_sdsl then&lt;br/&gt;    raise_application_error(-20106, &apos;Données non chargées dans T_FAE_SFR_SDSL_PRO pour SFR_SDSL &apos;);&lt;br/&gt;  When Others Then&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur Insert_SFR_SDSL_PRO : &apos;|| SQLCODE || &apos; &apos; ||SQLERRM);&lt;br/&gt;  End Insert_SFR_SDSL_PRO;&lt;br/&gt; &lt;br/&gt;  Procedure Insert_HIGHDEAL_SAV(mois number, annee number) IS&lt;br/&gt;  lignes_inserees number;&lt;br/&gt;  ligne_rejetees number;&lt;br/&gt;  &lt;br/&gt;  lignes_inserees_sav number;&lt;br/&gt;  lignes_update_sav number;&lt;br/&gt;  ligne_rejetees_sav number;&lt;br/&gt;  d_factu date;&lt;br/&gt;  &lt;br/&gt;  err_sav  exception;&lt;br/&gt;  err_highdeal exception;&lt;br/&gt;  &lt;br/&gt;  Cursor C_FAE_HIGHDEAL is &lt;br/&gt;    select * from &lt;br/&gt;      (&lt;br/&gt;      select &lt;br/&gt;      Sdsp.nom_dsp AS dsp,&lt;br/&gt;      T.FAI,&lt;br/&gt;      T.TYPE_COMPOSANTE,&lt;br/&gt;      T.MONTANT,&lt;br/&gt;      T.MARCHE,&lt;br/&gt;      to_date(T.DATE_FACTURATION,&apos;YYYYMMDD&apos;) as DATE_FACTURATION  from T_EXT_HIGHDEAL T&lt;br/&gt;      INNER JOIN s_com_map_nom_dsp Smap&lt;br/&gt;      on T.dsp = Smap.nom_dsp&lt;br/&gt;      INNER JOIN S_com_dsp Sdsp&lt;br/&gt;      on Smap.ID_COM_DSP = Sdsp.ID_DSP&lt;br/&gt;      where Smap.application = &apos;HIGHDEAL&apos;&lt;br/&gt;      and Sdsp.type_dsp=&apos;DSP&apos;&lt;br/&gt;      )&lt;br/&gt;    PIVOT ( sum(MONTANT) FOR (TYPE_COMPOSANTE) IN (&apos;Total composante Acces&apos; AS TOT_ACCES, &apos;Total Composante SI&apos; AS TOT_SI, &apos;Total Composante SAV&apos; AS TOT_SAV, &apos;Total Composante Collecte&apos; AS TOT_COLLECTE, &apos;Remise sur la composante Accès Abonnement Mensuel&apos; AS REMISE_ACCES));&lt;br/&gt;    &lt;br/&gt;  Cursor C_FACTU_SAV(c_mois number, c_annee number) is&lt;br/&gt;    select t_sav.nom_dsp,t_sav.fai,t_sav.tot_sav,hd.id from (&lt;br/&gt;        select dsp.nom_dsp,fac.fai,sum(fac.tarif_ax_final) TOT_SAV&lt;br/&gt;        from s_sav_facture fac&lt;br/&gt;        INNER JOIN S_COM_MAP_NOM_DSP MAP ON MAP.NOM_DSP = FAC.DSP&lt;br/&gt;        INNER JOIN S_COM_DSP DSP ON DSP.ID_DSP=MAP.ID_COM_DSP&lt;br/&gt;        WHERE&lt;br/&gt;        FAC.ANNEE = C_ANNEE&lt;br/&gt;        and fac.mois = c_mois&lt;br/&gt;        and fac.marche = &apos;GP&apos;&lt;br/&gt;        and nvl(fac.flag_facturable,&apos;O&apos;) &lt;&gt; &apos;N&apos;&lt;br/&gt;        and map.application = &apos;FACTU_SAV&apos;&lt;br/&gt;        and dsp.type_dsp=&apos;DSP&apos;&lt;br/&gt;        group by dsp.nom_dsp,fac.fai&lt;br/&gt;        order by dsp.nom_dsp, fac.fai) t_sav&lt;br/&gt;    LEFT OUTER JOIN T_FAE_HIGHDEAL_SAV HD ON HD.DSP=T_SAV.NOM_DSP AND HD.FAI=T_SAV.FAI AND HD.MARCHE=&apos;GP&apos;;&lt;br/&gt;  &lt;br/&gt;  BEGIN&lt;br/&gt;  &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.ENTER(G_LOG_HANDLE,&apos;Suppression des données dans T_FAE_HIGHDEAL_SAV&apos;);&lt;br/&gt;    delete from T_FAE_HIGHDEAL_SAV;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes effacées dans T_FAE_HIGHDEAL_SAV : &apos;||sql%rowcount);&lt;br/&gt;    &lt;br/&gt;    lignes_inserees :=0;&lt;br/&gt;    ligne_rejetees :=0;&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Chargement des données dans T_FAE_HIGHDEAL_SAV&apos;);&lt;br/&gt;    for c in C_FAE_HIGHDEAL loop&lt;br/&gt;        Begin&lt;br/&gt;             INSERT INTO  t_fae_highdeal_sav (&lt;br/&gt;                 DSP,&lt;br/&gt;                 FAI,&lt;br/&gt;                 MARCHE,&lt;br/&gt;                 DATE_FACTURATION,&lt;br/&gt;                 TOT_ACCES,&lt;br/&gt;                 TOT_SI,&lt;br/&gt;                 TOT_SAV,&lt;br/&gt;                 TOT_COLLECTE,&lt;br/&gt;                 REMISE_ACCES&lt;br/&gt;                )&lt;br/&gt;            VALUES (&lt;br/&gt;                 c.DSP,&lt;br/&gt;                 c.FAI,&lt;br/&gt;                 c.MARCHE,&lt;br/&gt;                 c.DATE_FACTURATION,&lt;br/&gt;                 c.TOT_ACCES,&lt;br/&gt;                 c.TOT_SI,&lt;br/&gt;                 null,&lt;br/&gt;                 c.TOT_COLLECTE,&lt;br/&gt;                 c.REMISE_ACCES&lt;br/&gt;                );&lt;br/&gt;          lignes_inserees := lignes_inserees +1;&lt;br/&gt;          EXCEPTION&lt;br/&gt;          WHEN OTHERS THEN&lt;br/&gt;           ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;           AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion pour dsp : &apos;||c.dsp||&apos; et fai : &apos;||c.fai||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;          END;&lt;br/&gt;    end loop;&lt;br/&gt;    &lt;br/&gt;    IF lignes_inserees=0 then&lt;br/&gt;      raise err_highdeal;&lt;br/&gt;    END IF;&lt;br/&gt;    &lt;br/&gt;    --FACTU_SAV&lt;br/&gt;    LIGNES_UPDATE_SAV :=0;&lt;br/&gt;	lignes_inserees_sav :=0;&lt;br/&gt;&lt;br/&gt;    D_FACTU := TO_DATE(&apos;01/&apos;||TO_CHAR(MOIS)||&apos;/&apos;||TO_CHAR(ANNEE),&apos;dd/mm/yyyy&apos;);&lt;br/&gt;    FOR C IN C_FACTU_SAV(mois,annee) LOOP&lt;br/&gt;        If c.id is not null Then &lt;br/&gt;          BEGIN&lt;br/&gt;           &lt;br/&gt;            update t_fae_highdeal_sav set TOT_SAV = c.TOT_SAV where id=c.id;&lt;br/&gt;            lignes_update_sav := lignes_update_sav+1;&lt;br/&gt;          EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees_sav := ligne_rejetees_sav+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur maj pour dsp : &apos;||c.nom_dsp||&apos; et fai : &apos;||c.fai||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;        Else&lt;br/&gt;          Begin&lt;br/&gt;               INSERT INTO  t_fae_highdeal_sav (&lt;br/&gt;                   DSP,&lt;br/&gt;                   FAI,&lt;br/&gt;                   MARCHE,&lt;br/&gt;                   DATE_FACTURATION,&lt;br/&gt;                   TOT_ACCES,&lt;br/&gt;                   TOT_SI,&lt;br/&gt;                   TOT_SAV,&lt;br/&gt;                   TOT_COLLECTE,&lt;br/&gt;                   REMISE_ACCES&lt;br/&gt;                  )&lt;br/&gt;              VALUES (&lt;br/&gt;                   c.nom_dsp,&lt;br/&gt;                   c.fai,&lt;br/&gt;                   &apos;GP&apos;,&lt;br/&gt;                   d_factu,&lt;br/&gt;                   null,&lt;br/&gt;                   null,&lt;br/&gt;                   c.TOT_SAV,&lt;br/&gt;                   null,&lt;br/&gt;                   null&lt;br/&gt;                  );&lt;br/&gt;            lignes_inserees_sav := lignes_inserees_sav +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees_sav := ligne_rejetees_sav+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion sav pour dsp : &apos;||c.nom_dsp||&apos; et fai : &apos;||c.fai||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;          End If;&lt;br/&gt;    end loop;&lt;br/&gt;    &lt;br/&gt;    IF lignes_inserees_sav=0 and LIGNES_UPDATE_SAV=0 then&lt;br/&gt;      raise err_sav;&lt;br/&gt;    END IF;&lt;br/&gt;    &lt;br/&gt;    commit;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes updatées dans T_FAE_HIGHDEAL_SAV pour SAV: &apos;||lignes_update_sav);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes insérées dans T_FAE_HIGHDEAL_SAV pour SAV: &apos;||lignes_inserees_sav);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.exit(G_LOG_HANDLE,&apos;Nombre de lignes rejetées de T_FAE_HIGHDEAL_SAV pour SAV: &apos;||ligne_rejetees_sav);&lt;br/&gt;  Exception&lt;br/&gt;  When err_highdeal then&lt;br/&gt;    raise_application_error(-20104, &apos;Données non chargées dans T_FAE_HIGHDEAL_SAV pour Highdeal &apos;);&lt;br/&gt;  When err_sav then&lt;br/&gt;    raise_application_error(-20105, &apos;Données non chargées dans T_FAE_HIGHDEAL_SAV pour sav&apos;);&lt;br/&gt;  When Others Then&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur Insert_HIGHDEAL_SAV : &apos;|| SQLCODE || &apos; &apos; ||SQLERRM);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Fin Insert sur erreur&apos;);&lt;br/&gt;  End Insert_HIGHDEAL_SAV;&lt;br/&gt;  &lt;br/&gt;  Procedure Insert_FACTU_PRO(P_mois number, P_annee number) IS&lt;br/&gt;  lignes_inserees number;&lt;br/&gt;  ligne_rejetees number;&lt;br/&gt;  err_factupro  exception;&lt;br/&gt;  &lt;br/&gt;   Cursor C_factu_pro (c_mois number, c_annee number) is&lt;br/&gt;	SELECT * &lt;br/&gt;	FROM&lt;br/&gt;	(SELECT ID_SERVICE, Sdsp.NOM_DSP, FAI,TECHNO,TYPE_VENTE, to_date(&apos;01/&apos;||to_char(mois)||&apos;/&apos;||to_char(annee),&apos;dd/mm/yyyy&apos;) AS DATE_FACTURATION, TYPE_FACTU, MONTANT&lt;br/&gt;	FROM T_FDSL_DETAIL_FACTURE T&lt;br/&gt;	INNER JOIN s_com_map_nom_dsp Smap&lt;br/&gt;		  on T.dsp = Smap.nom_dsp&lt;br/&gt;	INNER JOIN S_com_dsp Sdsp&lt;br/&gt;		  ON SMAP.ID_COM_DSP = SDSP.ID_DSP&lt;br/&gt;	WHERE SMAP.APPLICATION = &apos;FACTUPRO&apos;&lt;br/&gt;	AND SDSP.TYPE_DSP=&apos;DSP&apos;&lt;br/&gt;	AND MOIS =  EXTRACT(MONTH FROM ADD_MONTHS(TO_DATE(DECODE(LENGTH(TO_CHAR(c_mois)),1,&apos;0&apos;||TO_CHAR(c_mois),TO_CHAR(c_mois))||TO_CHAR(c_annee),&apos;MMYYYY&apos;),1))&lt;br/&gt;	AND ANNEE= EXTRACT(YEAR FROM ADD_MONTHS(To_date(decode(LENGTH(to_char(c_mois)),1,&apos;0&apos;||to_char(c_mois),to_char(c_mois))||to_char(c_annee),&apos;MMYYYY&apos;),1))&lt;br/&gt;	AND (TYPE_VENTE = &apos;OSEN&apos; OR TYPE_VENTE = &apos;INFRA&apos;) &lt;br/&gt;	and decode(FAI,&apos;SFR Neuf Cegetel&apos;,TECHNO,&apos;X&apos;) not in (&apos;ADSL&apos;,&apos;SDSL&apos;,&apos;ADSL Ext&apos;, &apos;SDSL Ext&apos;, &apos;SDSL+&apos;)&lt;br/&gt;	AND (&lt;br/&gt;	   (TYPE_FACTU = &apos;FAS&apos; AND LIB_TYPE_PRESTA IN (&apos;FAS de résiliation&apos;,&apos;FAS nouvelles lignes&apos;)) &lt;br/&gt;	OR (TYPE_FACTU = &apos;PFRO&apos; AND LIB_TYPE_PRESTA = &apos;PFRO nouvelles lignes&apos;) &lt;br/&gt;	OR (TYPE_FACTU = &apos;IRU&apos; AND LIB_TYPE_PRESTA = &apos;IRU nouvelles lignes&apos;) &lt;br/&gt;	OR (TYPE_FACTU = &apos;PRORATA&apos; AND LIB_TYPE_PRESTA = &apos;Prorata&apos;) &lt;br/&gt;	OR (TYPE_FACTU = &apos;LOC PRORATA&apos; AND LIB_TYPE_PRESTA = &apos;Location Prorata&apos;) &lt;br/&gt;	)&lt;br/&gt;	)&lt;br/&gt;	pivot (sum(nvl(montant,0)) for type_factu in (&apos;FAS&apos; as FAS, &apos;PFRO&apos; as PFRO, &apos;IRU&apos; as IRU, &apos;PRORATA&apos; as PRORATA_ABO, &apos;LOC PRORATA&apos; as PRORATA_LOC))&lt;br/&gt;	;&lt;br/&gt;	&lt;br/&gt;  Begin&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.ENTER(G_LOG_HANDLE,&apos;Suppression des données dans T_FAE_FACTU_PRO&apos;);&lt;br/&gt;    delete from T_FAE_FACTU_PRO;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes effacées dans T_FAE_FACTU_PRO : &apos;||sql%rowcount);&lt;br/&gt;    &lt;br/&gt;    lignes_inserees :=0;&lt;br/&gt;    ligne_rejetees :=0;&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Chargement des données dans T_FAE_FACTU_PRO&apos;);&lt;br/&gt;    FOR cpt_pro in C_factu_pro(P_mois,P_annee) LOOP&lt;br/&gt;		BEGIN&lt;br/&gt;		INSERT	INTO T_FAE_FACTU_PRO&lt;br/&gt;		  (&lt;br/&gt;			DSP,&lt;br/&gt;			FAI,&lt;br/&gt;			TECHNO,&lt;br/&gt;			TYPE_DE_VENTE,&lt;br/&gt;			FAS,&lt;br/&gt;			PFRO,&lt;br/&gt;			IRU,&lt;br/&gt;			PRORATA_ABO,&lt;br/&gt;			PRORATA_LOCATION,&lt;br/&gt;			DATE_FACTURATION&lt;br/&gt;		  )&lt;br/&gt;		  VALUES&lt;br/&gt;		  (&lt;br/&gt;			cpt_pro.NOM_DSP,&lt;br/&gt;			cpt_pro.FAI,&lt;br/&gt;			cpt_pro.TECHNO,&lt;br/&gt;			cpt_pro.TYPE_VENTE,&lt;br/&gt;			cpt_pro.FAS,&lt;br/&gt;			cpt_pro.PFRO,&lt;br/&gt;			cpt_pro.IRU,&lt;br/&gt;			cpt_pro.PRORATA_ABO,&lt;br/&gt;			cpt_pro.PRORATA_LOC,&lt;br/&gt;			cpt_pro.DATE_FACTURATION&lt;br/&gt;		  );&lt;br/&gt;		lignes_inserees := lignes_inserees +1;  &lt;br/&gt;		EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees +1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion factupro pour dsp : &apos;||cpt_pro.nom_dsp||&apos; et fai : &apos;||cpt_pro.fai||&apos; ; Code erreur : &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;	END LOOP;&lt;br/&gt;	&lt;br/&gt;	IF lignes_inserees=0 then&lt;br/&gt;		raise err_factupro;&lt;br/&gt;	END IF;&lt;br/&gt;	&lt;br/&gt;	Commit;&lt;br/&gt;	&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes insérées dans T_FAE_FACTU_PRO &apos;||lignes_inserees);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.exit(G_LOG_HANDLE,&apos;Nombre de lignes rejetées de T_FAE_FACTU_PRO &apos;||ligne_rejetees);&lt;br/&gt;  Exception&lt;br/&gt;  When err_factupro then&lt;br/&gt;    raise_application_error(-20103, &apos;Données Factupro non chargées dans T_FDSL_DETAIL_FACTURE pour le mois m&apos;);&lt;br/&gt;  When Others Then&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur Insert_FACTU_PRO : &apos;|| SQLCODE || &apos; &apos; ||SQLERRM);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Fin Insert sur erreur&apos;);&lt;br/&gt;  End Insert_FACTU_PRO;&lt;br/&gt;  &lt;br/&gt;  Procedure Verif_Dsp is&lt;br/&gt;  err_map exception;&lt;br/&gt;  cpt number;&lt;br/&gt;  &lt;br/&gt;  Cursor C_dsp is&lt;br/&gt;    select &apos;FACTUPRO&apos; Application,dsp.nom_dsp from s_com_dsp dsp&lt;br/&gt;    left outer join s_com_map_nom_dsp map on dsp.id_dsp = map.id_com_dsp and map.application = &apos;FACTUPRO&apos;&lt;br/&gt;    where dsp.type_dsp=&apos;DSP&apos;&lt;br/&gt;    and map.id is null&lt;br/&gt;    union&lt;br/&gt;    select &apos;FACTU_SAV&apos; Application,dsp.nom_dsp from s_com_dsp dsp&lt;br/&gt;    left outer join s_com_map_nom_dsp map on dsp.id_dsp = map.id_com_dsp and map.application = &apos;FACTU_SAV&apos;&lt;br/&gt;    where dsp.type_dsp=&apos;DSP&apos;&lt;br/&gt;    and map.id is null&lt;br/&gt;    union&lt;br/&gt;    select &apos;HIGHDEAL&apos; Application,dsp.nom_dsp from s_com_dsp dsp&lt;br/&gt;    left outer join s_com_map_nom_dsp map on dsp.id_dsp = map.id_com_dsp and map.application = &apos;HIGHDEAL&apos;&lt;br/&gt;    where dsp.type_dsp=&apos;DSP&apos;&lt;br/&gt;    and map.id is null&lt;br/&gt;    union&lt;br/&gt;    select &apos;FACTU_SDSL_SFR&apos; Application,dsp.nom_dsp from s_com_dsp dsp&lt;br/&gt;    left outer join s_com_map_nom_dsp map on dsp.id_dsp = map.id_com_dsp and map.application = &apos;FACTU_SDSL_SFR&apos;&lt;br/&gt;    where dsp.type_dsp=&apos;DSP&apos;&lt;br/&gt;    and map.id is null;&lt;br/&gt;              &lt;br/&gt;  Begin&lt;br/&gt;    cpt :=0;&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.enter(G_LOG_HANDLE,&apos;Verification des dsp&apos;);&lt;br/&gt;    &lt;br/&gt;    For c in C_dsp Loop&lt;br/&gt;      AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;DSP absente pour l&apos;&apos;application &apos;||c.Application||&apos; : &apos;||c.nom_dsp);&lt;br/&gt;      cpt:=cpt+1;&lt;br/&gt;    End Loop;&lt;br/&gt;    &lt;br/&gt;    if cpt&gt;0 then&lt;br/&gt;      raise err_map;&lt;br/&gt;    end if;&lt;br/&gt;   &lt;br/&gt;  Exception&lt;br/&gt;  When err_map then&lt;br/&gt;    raise_application_error(-20101, &apos;DSP non configurée&apos;);&lt;br/&gt;  When Others Then&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur Verif DSP : &apos;|| SQLCODE || &apos; &apos; ||SQLERRM);&lt;br/&gt;  End Verif_Dsp;&lt;br/&gt;  &lt;br/&gt;  Procedure Verif_Fai is&lt;br/&gt;  err_fai exception;&lt;br/&gt;  d date;&lt;br/&gt;  &lt;br/&gt;  cpt_dti number;&lt;br/&gt;  &lt;br/&gt;  Cursor Verfi_highdeal Is&lt;br/&gt;  select distinct hd.fai &lt;br/&gt;  from t_fae_highdeal_sav hd&lt;br/&gt;  where hd.marche=&apos;GP&apos;&lt;br/&gt;  and not exists(&lt;br/&gt;                  select distinct dti.designation_type_inventaire,fai_dti.nom_fai &lt;br/&gt;                  from  t_fae_config_fai_dti fai_dti &lt;br/&gt;                  inner join t_fae_config_dti dti on fai_dti.id_dti = dti.id &lt;br/&gt;                  inner join t_fae_config_societe soc on fai_dti.id_societe = soc.id&lt;br/&gt;                  where dti.designation_type_inventaire in (&apos;GP ByTel&apos;,&apos;GP SFR&apos;)&lt;br/&gt;                  and upper(hd.fai) = upper(fai_dti.nom_fai));&lt;br/&gt; &lt;br/&gt;  Cursor Verif_factu_pro is&lt;br/&gt;  select distinct pro.fai from t_fae_factu_pro pro&lt;br/&gt;  where not exists(select distinct fai_dti.nom_fai &lt;br/&gt;                    from t_fae_config_fai_dti fai_dti&lt;br/&gt;                    inner join t_fae_config_dti dti on fai_dti.id_dti = dti.id &lt;br/&gt;                    inner join t_fae_config_societe soc on fai_dti.id_societe = soc.id&lt;br/&gt;					where dti.id in (C_Dti_Osen_Adsl_Non_Iru, C_Dti_Osen_Sdsl_Non_Iru, C_Dti_Osen_Fibre_Non_Iru,C_Dti_Infra_Op_Non_Iru,C_Dti_Osen_Iru,C_Dti_Infra_Op_Iru)                    &lt;br/&gt;                    and fai_dti.nom_fai=pro.fai&lt;br/&gt;                  );&lt;br/&gt;  &lt;br/&gt;  Cursor Verif_sdsl_sfr is&lt;br/&gt;  select distinct sdsl_pro.fai from T_Fae_Sfr_Sdsl_Pro sdsl_pro&lt;br/&gt;  where not exists(select distinct Fai_Dti.nom_fai &lt;br/&gt;                    from T_Fae_Config_Fai_Dti Fai_Dti&lt;br/&gt;                    where fai_dti.id_dti =C_Dti_Osen_Sdsl_Sfr&lt;br/&gt;                    and fai_dti.nom_fai=sdsl_pro.fai);&lt;br/&gt;            &lt;br/&gt;  Begin&lt;br/&gt;    cpt_dti :=0;&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes insérées dans T_FAE_FACTU_PRO&apos;);&lt;br/&gt;    &lt;br/&gt;    For c in Verfi_highdeal Loop&lt;br/&gt;      AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;FAI présent dans t_fae_highdeal_sav et non configuré : &apos;||c.fai);&lt;br/&gt;      cpt_dti:=cpt_dti+1;&lt;br/&gt;    End Loop;&lt;br/&gt;&lt;br/&gt;    For c in Verif_factu_pro Loop&lt;br/&gt;      AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;FAI présent dans t_fae_factu_pro et non configuré : &apos;||c.fai);&lt;br/&gt;      cpt_dti:=cpt_dti+1;&lt;br/&gt;    End Loop;&lt;br/&gt;    &lt;br/&gt;    For c in Verif_sdsl_sfr Loop&lt;br/&gt;      AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;FAI présent dans t_fae_sfr_sdsl et non configuré : &apos;||c.fai);&lt;br/&gt;      cpt_dti:=cpt_dti+1;&lt;br/&gt;    End Loop;&lt;br/&gt;    &lt;br/&gt;    If cpt_dti&gt; 0 Then&lt;br/&gt;      raise err_fai;&lt;br/&gt;    End If;&lt;br/&gt;&lt;br/&gt;  Exception&lt;br/&gt;  When err_fai then&lt;br/&gt;    raise_application_error(-20102, &apos;FAI non configuré&apos;);&lt;br/&gt;  When Others Then&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur Verif FAI : &apos;|| SQLCODE || &apos; &apos; ||SQLERRM);&lt;br/&gt;  End Verif_Fai;&lt;br/&gt;  &lt;br/&gt;  &lt;br/&gt;  Procedure Calcul_dti Is&lt;br/&gt;  lignes_inserees Number;&lt;br/&gt;  ligne_rejetees Number;&lt;br/&gt;  &lt;br/&gt;  Cursor Calcul_dti_highdeal Is&lt;br/&gt;      SELECT FAI_DTI.id as ID_DTI_FAI, S.ID_DSP as ID_DSP_COM, DATE_FACTURATION, &lt;br/&gt;     (nvl(TOT_ACCES,0) +&lt;br/&gt;      nvl(TOT_SI,0) +&lt;br/&gt;      Nvl(Tot_Sav,0) +&lt;br/&gt;      Nvl(Tot_Collecte,0) -&lt;br/&gt;      nvl(REMISE_ACCES,0)) AS MONTANT_FAE&lt;br/&gt;    FROM&lt;br/&gt;    T_FAE_CONFIG_DTI        DTI,&lt;br/&gt;    T_FAE_CONFIG_FAI_DTI    FAI_DTI,&lt;br/&gt;    T_FAE_HIGHDEAL_SAV      data,&lt;br/&gt;    S_COM_DSP S&lt;br/&gt;    Where&lt;br/&gt;    Dti.Id                        =Fai_Dti.Id_Dti&lt;br/&gt;    and upper(FAI_DTI.NOM_FAI)    =upper(data.FAI)&lt;br/&gt;    And Data.Dsp                  =S.Nom_Dsp&lt;br/&gt;    And Data.Marche               =Decode(Dti.Id,C_Dti_Gp_Sfr,&apos;GP&apos;,C_Dti_Gp_Bytel,&apos;GP&apos;,C_Dti_Osen_Adsl_Sfr,&apos;ECO&apos;)&lt;br/&gt;    and Dti.Id in(C_Dti_Gp_Sfr,C_Dti_Gp_Bytel,C_Dti_Osen_Adsl_Sfr)&lt;br/&gt;    order by Dti.Designation_Type_Inventaire;&lt;br/&gt;  ---------------------------------------------------------------------------------------------------------   &lt;br/&gt;  Cursor Calul_dti_infra_op_iru is&lt;br/&gt;   Select FAI_DTI.id as ID_DTI_FAI,S.ID_DSP as ID_DSP_COM, data.Date_Facturation, data.Montant MONTANT_FAE&lt;br/&gt;    from&lt;br/&gt;    T_FAE_CONFIG_DTI        DTI,&lt;br/&gt;    T_FAE_CONFIG_FAI_DTI    FAI_DTI,&lt;br/&gt;    S_COM_DSP S,&lt;br/&gt;    (Select Dsp,Fai,Date_Facturation, FAS+PFRO+IRU+PRORATA_ABO+PRORATA_LOCATION as Montant&lt;br/&gt;    from&lt;br/&gt;    (SELECT&lt;br/&gt;      DSP,&lt;br/&gt;      Fai,&lt;br/&gt;      DATE_FACTURATION,&lt;br/&gt;      SUM(NVL(FAS,0)) FAS,&lt;br/&gt;      SUM(NVL(PFRO,0)) PFRO,&lt;br/&gt;      SUM(NVL(IRU,0)) IRU, &lt;br/&gt;      SUM(NVL(PRORATA_ABO,0)) PRORATA_ABO,&lt;br/&gt;      sum(nvl(PRORATA_LOCATION,0)) PRORATA_LOCATION&lt;br/&gt;    From T_Fae_Factu_Pro&lt;br/&gt;    Where&lt;br/&gt;    Type_De_Vente  =&apos;INFRA&apos;&lt;br/&gt;    AND NVL(IRU,0) != 0&lt;br/&gt;    Group By Dsp,  Fai, Date_Facturation)&lt;br/&gt;    ) Data&lt;br/&gt;    Where&lt;br/&gt;    Dti.Id                        =Fai_Dti.Id_Dti&lt;br/&gt;    And Upper(Fai_Dti.Nom_Fai)    =Upper(Data.Fai)&lt;br/&gt;    And Data.Dsp                  =S.Nom_Dsp&lt;br/&gt;    And Dti.Id=C_Dti_Infra_Op_Iru;&lt;br/&gt;    -------------------------------------------------------------------------------------------------------&lt;br/&gt;    Cursor Calul_dti_infra_op_non_iru is&lt;br/&gt;    Select FAI_DTI.id as ID_DTI_FAI,S.ID_DSP as ID_DSP_COM, data.Date_Facturation, data.Montant MONTANT_FAE&lt;br/&gt;      from&lt;br/&gt;      T_Fae_Config_Dti        Dti,&lt;br/&gt;      T_Fae_Config_Fai_Dti    Fai_Dti,&lt;br/&gt;      S_Com_Dsp S,&lt;br/&gt;      (Select Dsp,Fai,Date_Facturation, FAS+PFRO+IRU+PRORATA_ABO+PRORATA_LOCATION as Montant&lt;br/&gt;      from&lt;br/&gt;      (SELECT&lt;br/&gt;        DSP,&lt;br/&gt;        Fai,&lt;br/&gt;        DATE_FACTURATION,&lt;br/&gt;        SUM(NVL(FAS,0))              FAS,&lt;br/&gt;        SUM(NVL(PFRO,0))             PFRO,&lt;br/&gt;        SUM(NVL(IRU,0))              IRU, &lt;br/&gt;        SUM(NVL(PRORATA_ABO,0))      PRORATA_ABO,&lt;br/&gt;        sum(nvl(PRORATA_LOCATION,0)) PRORATA_LOCATION&lt;br/&gt;      From T_Fae_Factu_Pro&lt;br/&gt;      Where&lt;br/&gt;      Type_De_Vente  =&apos;INFRA&apos;&lt;br/&gt;      AND NVL(IRU,0) =0&lt;br/&gt;      Group By Dsp,  Fai, Date_Facturation)) Data&lt;br/&gt;      Where&lt;br/&gt;      Dti.Id                        =Fai_Dti.Id_Dti&lt;br/&gt;      And Upper(Fai_Dti.Nom_Fai)    =Upper(Data.Fai)&lt;br/&gt;      And Data.Dsp                  =S.Nom_Dsp&lt;br/&gt;      And Dti.Id=C_Dti_Infra_Op_Non_Iru;&lt;br/&gt;  ---------------------------------------------------------------------------------------------------------  &lt;br/&gt;  Cursor Calcul_dti_Osen_Hors_sfr_Iru Is &lt;br/&gt;  Select FAI_DTI.id as ID_DTI_FAI,S.ID_DSP as ID_DSP_COM, data.Date_Facturation, data.Montant MONTANT_FAE&lt;br/&gt;    from&lt;br/&gt;    T_Fae_Config_Dti        Dti,&lt;br/&gt;    T_Fae_Config_Fai_Dti    Fai_Dti,&lt;br/&gt;    S_Com_Dsp               S,&lt;br/&gt;    (Select Dsp,Fai,Date_Facturation, FAS+PFRO+IRU+PRORATA_ABO+PRORATA_LOCATION As Montant&lt;br/&gt;    from&lt;br/&gt;    (SELECT&lt;br/&gt;      DSP,&lt;br/&gt;      Fai,&lt;br/&gt;      DATE_FACTURATION,&lt;br/&gt;      SUM(NVL(FAS,0))             FAS,&lt;br/&gt;      SUM(NVL(PFRO,0))            PFRO,&lt;br/&gt;      SUM(NVL(IRU,0))             IRU,&lt;br/&gt;      SUM(NVL(PRORATA_ABO,0))     PRORATA_ABO,&lt;br/&gt;      sum(nvl(PRORATA_LOCATION,0)) PRORATA_LOCATION&lt;br/&gt;    From T_Fae_Factu_Pro&lt;br/&gt;    Where&lt;br/&gt;    Type_De_Vente  =&apos;OSEN&apos; &lt;br/&gt;    AND NVL(IRU,0) !=0&lt;br/&gt;    Group By Dsp,  Fai, Date_Facturation)) Data&lt;br/&gt;    where&lt;br/&gt;    Dti.Id                        =Fai_Dti.Id_Dti&lt;br/&gt;    And Upper(Fai_Dti.Nom_Fai)    =Upper(Data.Fai)&lt;br/&gt;    And Dti.Id=C_Dti_Osen_Iru&lt;br/&gt;    And Data.Dsp                  =S.Nom_Dsp;&lt;br/&gt;  -------------------------------------------------------------------------------------------------------&lt;br/&gt;  Cursor Calcul_dti_Osen_Hs_sfr_Non_Iru Is &lt;br/&gt;  Select FAI_DTI.id as ID_DTI_FAI,S.ID_DSP as ID_DSP_COM, data.Date_Facturation, data.Montant MONTANT_FAE,data.val&lt;br/&gt;    from           &lt;br/&gt;    (Select Dsp,Fai,Date_Facturation, val, FAS+PFRO+PRORATA_ABO+PRORATA_LOCATION As Montant&lt;br/&gt;          from   &lt;br/&gt;           (select &lt;br/&gt;                DSP,&lt;br/&gt;                Fai,&lt;br/&gt;                val,&lt;br/&gt;                DATE_FACTURATION,&lt;br/&gt;                SUM(NVL(FAS,0))               FAS,&lt;br/&gt;                SUM(NVL(PFRO,0))              PFRO,&lt;br/&gt;                SUM(NVL(PRORATA_ABO,0))       PRORATA_ABO,&lt;br/&gt;                SUM(nvl(PRORATA_LOCATION,0))  PRORATA_LOCATION from(   &lt;br/&gt;           SELECT&lt;br/&gt;                DSP,&lt;br/&gt;                Fai,&lt;br/&gt;                DATE_FACTURATION,&lt;br/&gt;                case  when techno=&apos;ADSL&apos; Then C_Dti_Osen_Adsl_Non_Iru&lt;br/&gt;                      when techno=&apos;ADSL Ext&apos; Then C_Dti_Osen_Adsl_Non_Iru&lt;br/&gt;                      when techno=&apos;SDSL&apos; Then C_Dti_Osen_Sdsl_Non_Iru&lt;br/&gt;                      when techno=&apos;SDSL+&apos; Then C_Dti_Osen_Sdsl_Non_Iru&lt;br/&gt;                      when techno=&apos;SDSL Ext&apos; Then C_Dti_Osen_Sdsl_Non_Iru&lt;br/&gt;                      else C_Dti_Osen_Fibre_Non_Iru&lt;br/&gt;                end val,&lt;br/&gt;                FAS,PFRO,PRORATA_ABO,PRORATA_LOCATION&lt;br/&gt;              From T_Fae_Factu_Pro&lt;br/&gt;              Where&lt;br/&gt;              Type_De_Vente  =&apos;OSEN&apos; &lt;br/&gt;              AND NVL(IRU,0) =0)&lt;br/&gt;              Group By Dsp,  Fai,val, Date_Facturation&lt;br/&gt;              order by dsp,fai)) data&lt;br/&gt;  inner join T_Fae_Config_Fai_Dti Fai_Dti on Fai_Dti.Id_Dti = val and  Upper(Fai_Dti.Nom_Fai)    =Upper(data.fai)&lt;br/&gt;  inner join S_Com_Dsp S on Data.Dsp=S.Nom_Dsp&lt;br/&gt;  inner join t_fae_config_dti dti on dti.id=Fai_Dti.Id_Dti&lt;br/&gt;  where dti.id in (C_Dti_Osen_Adsl_Non_Iru,C_Dti_Osen_Sdsl_Non_Iru,C_Dti_Osen_Fibre_Non_Iru);&lt;br/&gt;  ------------------------------------------------------------------------------------------------------------------------  &lt;br/&gt;  Cursor Calcul_Dti_Osen_Sdsl_Sfr Is&lt;br/&gt;  Select FAI_DTI.id as ID_DTI_FAI,S.ID_DSP as ID_DSP_COM, data.Date_Facturation, (Nvl(Tot_Abo,0) +  Nvl(Tot_Fas,0) +  Nvl(Tot_Resil,0) + nvl(TOT_AUTRES,0)) AS Montant_FAE &lt;br/&gt;    from&lt;br/&gt;    T_Fae_Config_Dti        Dti,&lt;br/&gt;    T_Fae_Config_Fai_Dti    Fai_Dti,&lt;br/&gt;    S_Com_Dsp               S,&lt;br/&gt;    T_Fae_Sfr_Sdsl_Pro    Data&lt;br/&gt;    where&lt;br/&gt;    Dti.Id                        =Fai_Dti.Id_Dti&lt;br/&gt;    And Upper(Fai_Dti.Nom_Fai)    =Upper(Data.Fai)&lt;br/&gt;    And Dti.Id=C_Dti_Osen_Sdsl_Sfr&lt;br/&gt;    And Data.Dsp                  =S.Nom_Dsp;&lt;br/&gt;  &lt;br/&gt;  Begin  &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.ENTER(G_LOG_HANDLE,&apos;Début du calcul des dti : &apos;);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos; &apos;);&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Vidage de la table T_FACTURATION_FAE&apos;);&lt;br/&gt;    delete from T_FACTURATION_FAE;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes supprimées T_FACTURATION_FAE : &apos;||sql%rowcount);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;&apos;);&lt;br/&gt;    lignes_inserees :=0;&lt;br/&gt;    ligne_rejetees :=0;&lt;br/&gt;    &lt;br/&gt;      For c in Calcul_dti_highdeal loop&lt;br/&gt;        Begin&lt;br/&gt;            INSERT&lt;br/&gt;              INTO T_FACTURATION_FAE&lt;br/&gt;                (&lt;br/&gt;                  ID_DTI_FAI,&lt;br/&gt;                  ID_DSP_COM,&lt;br/&gt;                  DATE_FACTURATION,&lt;br/&gt;                  MONTANT_FAE&lt;br/&gt;                )&lt;br/&gt;                VALUES&lt;br/&gt;                (&lt;br/&gt;                  c.ID_DTI_FAI,&lt;br/&gt;                  c.ID_DSP_COM,&lt;br/&gt;                  c.DATE_FACTURATION,&lt;br/&gt;                  c.MONTANT_FAE&lt;br/&gt;                );   &lt;br/&gt;            lignes_inserees := lignes_inserees +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion fae highdeal pour id_dti_fai : &apos;||c.ID_DTI_FAI||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;             &lt;br/&gt;            END;&lt;br/&gt;      End loop;&lt;br/&gt;      &lt;br/&gt;      For c in Calul_dti_infra_op_iru loop&lt;br/&gt;        Begin&lt;br/&gt;            INSERT&lt;br/&gt;              INTO T_FACTURATION_FAE&lt;br/&gt;                (&lt;br/&gt;                  ID_DTI_FAI,&lt;br/&gt;                  ID_DSP_COM,&lt;br/&gt;                  DATE_FACTURATION,&lt;br/&gt;                  MONTANT_FAE&lt;br/&gt;                )&lt;br/&gt;                VALUES&lt;br/&gt;                (&lt;br/&gt;                  c.ID_DTI_FAI,&lt;br/&gt;                  c.ID_DSP_COM,&lt;br/&gt;                  c.DATE_FACTURATION,&lt;br/&gt;                  c.MONTANT_FAE&lt;br/&gt;                );   &lt;br/&gt;            lignes_inserees := lignes_inserees +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion fae dti infra op iru pour id_dti_fai : &apos;||c.ID_DTI_FAI||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;      End loop;&lt;br/&gt;      &lt;br/&gt;      For c in Calul_dti_infra_op_non_iru loop&lt;br/&gt;        Begin&lt;br/&gt;            INSERT&lt;br/&gt;              INTO T_FACTURATION_FAE&lt;br/&gt;                (&lt;br/&gt;                  ID_DTI_FAI,&lt;br/&gt;                  ID_DSP_COM,&lt;br/&gt;                  DATE_FACTURATION,&lt;br/&gt;                  MONTANT_FAE&lt;br/&gt;                )&lt;br/&gt;                VALUES&lt;br/&gt;                (&lt;br/&gt;                  c.ID_DTI_FAI,&lt;br/&gt;                  c.ID_DSP_COM,&lt;br/&gt;                  c.DATE_FACTURATION,&lt;br/&gt;                  c.MONTANT_FAE&lt;br/&gt;                );   &lt;br/&gt;            lignes_inserees := lignes_inserees +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion fae dti infra op iru pour id_dti_fai : &apos;||c.ID_DTI_FAI||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;      End loop;&lt;br/&gt;      &lt;br/&gt;      For c in Calcul_dti_Osen_Hors_sfr_Iru loop&lt;br/&gt;        Begin&lt;br/&gt;            INSERT&lt;br/&gt;              INTO T_FACTURATION_FAE&lt;br/&gt;                (&lt;br/&gt;                  ID_DTI_FAI,&lt;br/&gt;                  ID_DSP_COM,&lt;br/&gt;                  DATE_FACTURATION,&lt;br/&gt;                  MONTANT_FAE&lt;br/&gt;                )&lt;br/&gt;                VALUES&lt;br/&gt;                (&lt;br/&gt;                  c.ID_DTI_FAI,&lt;br/&gt;                  c.ID_DSP_COM,&lt;br/&gt;                  c.DATE_FACTURATION,&lt;br/&gt;                  c.MONTANT_FAE&lt;br/&gt;                );   &lt;br/&gt;            lignes_inserees := lignes_inserees +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion fae dti Osen Hors SFR IRU pour id_dti_fai : &apos;||c.ID_DTI_FAI||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;      End loop;&lt;br/&gt;      &lt;br/&gt;      For c in Calcul_dti_Osen_Hs_sfr_Non_Iru loop&lt;br/&gt;        Begin&lt;br/&gt;            INSERT&lt;br/&gt;              INTO T_FACTURATION_FAE&lt;br/&gt;                (&lt;br/&gt;                  ID_DTI_FAI,&lt;br/&gt;                  ID_DSP_COM,&lt;br/&gt;                  DATE_FACTURATION,&lt;br/&gt;                  MONTANT_FAE&lt;br/&gt;                )&lt;br/&gt;                VALUES&lt;br/&gt;                (&lt;br/&gt;                  c.ID_DTI_FAI,&lt;br/&gt;                  c.ID_DSP_COM,&lt;br/&gt;                  c.DATE_FACTURATION,&lt;br/&gt;                  c.MONTANT_FAE&lt;br/&gt;                );   &lt;br/&gt;            lignes_inserees := lignes_inserees +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion fae dti Osen Hors SFR NON IRU pour id_dti_fai : &apos;||c.ID_DTI_FAI||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;      End loop;&lt;br/&gt;      &lt;br/&gt;      For c in Calcul_Dti_Osen_Sdsl_Sfr loop&lt;br/&gt;        Begin&lt;br/&gt;            INSERT&lt;br/&gt;              INTO T_FACTURATION_FAE&lt;br/&gt;                (&lt;br/&gt;                  ID_DTI_FAI,&lt;br/&gt;                  ID_DSP_COM,&lt;br/&gt;                  DATE_FACTURATION,&lt;br/&gt;                  MONTANT_FAE&lt;br/&gt;                )&lt;br/&gt;                VALUES&lt;br/&gt;                (&lt;br/&gt;                  c.ID_DTI_FAI,&lt;br/&gt;                  c.ID_DSP_COM,&lt;br/&gt;                  c.DATE_FACTURATION,&lt;br/&gt;                  c.MONTANT_FAE&lt;br/&gt;                );   &lt;br/&gt;            lignes_inserees := lignes_inserees +1;&lt;br/&gt;            EXCEPTION&lt;br/&gt;            WHEN OTHERS THEN&lt;br/&gt;             ligne_rejetees := ligne_rejetees+1;&lt;br/&gt;             AXIONEUSER_COMMUN.LOGGER.info(g_log_handle,&apos;Erreur insertion fae dti Osen SDSL SFR pour id_dti_fai : &apos;||c.ID_DTI_FAI||&apos; ; Code erreur : &apos;||SQLCODE||&apos;, &apos;||SQLERRM);&lt;br/&gt;            END;&lt;br/&gt;      End loop;&lt;br/&gt;      &lt;br/&gt;      commit;&lt;br/&gt;      AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes insérées dans T_FACTURATION_FAE pour SAV: &apos;||lignes_inserees);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Nombre de lignes rejetées de T_FACTURATION_FAE pour SAV: &apos;||ligne_rejetees);&lt;br/&gt;      &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Fin du calcul des dti&apos;);&lt;br/&gt;  End Calcul_dti;&lt;br/&gt;  &lt;br/&gt;  &lt;br/&gt;  &lt;br/&gt;  PROCEDURE Chargement_FAE(Mois number,Annee number) IS&lt;br/&gt;  &lt;br/&gt;  Dsp_map exception;&lt;br/&gt;  pragma exception_init(Dsp_map,-20101);&lt;br/&gt;  Fai_err exception;&lt;br/&gt;  pragma exception_init(Fai_err,-20102);&lt;br/&gt;  factu_err exception;&lt;br/&gt;  pragma exception_init(factu_err,-20103);&lt;br/&gt;  highdeal_err exception;&lt;br/&gt;  pragma exception_init(highdeal_err,-20104);&lt;br/&gt;  highdeal_sav_err exception;&lt;br/&gt;  pragma exception_init(highdeal_sav_err,-20105);&lt;br/&gt;  sdsl_err exception;&lt;br/&gt;  pragma exception_init(sdsl_err,-20106);&lt;br/&gt;  copie_err exception;&lt;br/&gt;  pragma exception_init(copie_err,-20107);&lt;br/&gt;  &lt;br/&gt;  Nom_Fic_Highdeal varchar2(100);&lt;br/&gt;  &lt;br/&gt;  BEGIN&lt;br/&gt;    p_ouv_session_log;&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.ENTER(G_LOG_HANDLE,&apos;Début du traitement : &apos;);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos; &apos;);&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Copie du fichier Highdeal&apos;);&lt;br/&gt;    Nom_Fic_Highdeal :=g_fic_highdeal||to_char(Annee)||to_char(Mois,&apos;fm00&apos;)||&apos;01.csv&apos;;&lt;br/&gt;    Copie_Fichier_Highdeal(Nom_Fic_Highdeal);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Fichier Highdeal copié&apos;);&lt;br/&gt;    &lt;br/&gt;    Verif_Dsp;&lt;br/&gt;&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Insertion dans Sfr_Sdsl_Pro&apos;);&lt;br/&gt;    Insert_SFR_SDSL_PRO(Mois,Annee);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Fin insertion dans Sfr_Sdsl_Pro&apos;);&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Insertion dans Highdeal_sav&apos;);&lt;br/&gt;    Insert_HIGHDEAL_SAV(Mois,Annee);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.info(G_LOG_HANDLE,&apos;Fin insertion dans Highdeal_sav&apos;);&lt;br/&gt;		    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.INFO(G_LOG_HANDLE,&apos;Insertion dans T_FAE_FACTU_PRO&apos;);&lt;br/&gt;    INSERT_FACTU_PRO(MOIS,ANNEE);&lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.INFO(G_LOG_HANDLE,&apos;Fin Insertion dans T_FAE_FACTU_PRO&apos;);&lt;br/&gt;    &lt;br/&gt;    Verif_Fai;&lt;br/&gt;    &lt;br/&gt;    Calcul_dti;&lt;br/&gt;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Fin du traitement&apos;);&lt;br/&gt;    p_ferm_Session_log;&lt;br/&gt;  EXCEPTION&lt;br/&gt;  When Dsp_map Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur dsp non mappée : &apos;||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20120,&apos;Prog interrompu pour dsp non configurée, consulter le log&apos;);&lt;br/&gt;  When Fai_err Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur fai non configuré : &apos;||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20121,&apos;Prog interrompu pour fai non configuré, consulter le log&apos;);&lt;br/&gt;  When factu_err Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur insertion factupro : &apos;||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20122,&apos;Prog interrompu pour erreur insertion factupro, consulter le log&apos;);&lt;br/&gt;  When highdeal_err Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur insertion Highdeal : &apos;||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20123,&apos;Prog interrompu pour erreur insertion Highdeal, consulter le log&apos;);&lt;br/&gt;  When highdeal_sav_err Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur insertion Highdeal sav : &apos; ||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20124,&apos;Prog interrompu pour erreur insertion Highdeal sav, consulter le log&apos;);&lt;br/&gt;  When sdsl_err Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur insertion SFR SDSL : &apos;||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20125,&apos;Prog interrompu pour erreur insertion SDSL SFR, consulter le log&apos;);&lt;br/&gt;  When copie_err Then&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur copie fichier highdeal : &apos;||SQLERRM);&lt;br/&gt;        AXIONEUSER_COMMUN.LOGGER.exit(g_log_handle,&apos;Traitement stoppé&apos;);&lt;br/&gt;        p_ferm_Session_log;&lt;br/&gt;        raise_application_error(-20126,&apos;Prog interrompu pour erreur copie fichier highdeal, consulter le log&apos;);&lt;br/&gt;  WHEN OTHERS THEN&lt;br/&gt;    ROLLBACK;    &lt;br/&gt;    AXIONEUSER_COMMUN.LOGGER.error(g_log_handle,&apos;Erreur : &apos; ||SQLERRM);&lt;br/&gt;    p_ferm_Session_log;&lt;br/&gt;  END Chargement_FAE;&lt;br/&gt;  &lt;br/&gt;end pck_calcul_fae;</source>
</body>
</PackageOracle>