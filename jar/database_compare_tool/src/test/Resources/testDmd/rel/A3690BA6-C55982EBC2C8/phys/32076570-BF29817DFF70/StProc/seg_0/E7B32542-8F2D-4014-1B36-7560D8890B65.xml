<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="PROC_FDSL_UPLOAD_CODE_OFFRE" id="E7B32542-8F2D-4014-1B36-7560D8890B65" directorySegmentName="seg_0">
<sourceConnName>DEV57_AXIONEUSER_FACTU</sourceConnName>
<sourceObjSchema>AXIONEUSER_FACTU</sourceObjSchema>
<sourceObjName>PROC_FDSL_UPLOAD_CODE_OFFRE</sourceObjName>
<createdBy>R.WATH</createdBy>
<createdTime>2012-12-04 10:06:38 UTC</createdTime>
<generatorID>Généré par l&apos;utilisateur</generatorID>
<ownerDesignName>ST-SYS-SIB-BD_FCTPRO-000009-8 MCD-FACTUPRO V4.5.0</ownerDesignName>
<owner>4FCC3A6A-181E-A36A-613B-7868309493E2</owner>
<source>CREATE OR REPLACE PROCEDURE                    AXIONEUSER_FACTU.PROC_FDSL_UPLOAD_CODE_OFFRE AS&lt;br/&gt;&lt;br/&gt;/**************************************************************&lt;br/&gt;  * PROCEDURE D&apos;IMPORTATION DE DONNEES CONTENUES DANS UN FICHIER CSV&lt;br/&gt;  * VERS LA TABLE TEMPORAIRE t_sdsl_upload_code_offre_temp.&lt;br/&gt;  *&lt;br/&gt;  * Auteur : Olivier Mourissoux, Septembre 2008&lt;br/&gt;  * Dernière mise à jour : Pascal Spinat, le 27/10/2009&lt;br/&gt;  *&lt;br/&gt;  * e-mail : olivier.mourissoux@sogeti.com&lt;br/&gt;  ***************************************************************/&lt;br/&gt;  &lt;br/&gt;   v_blob_data   BLOB; --fichier à importer&lt;br/&gt;   v_blob_len        NUMBER; --longueur du fichier à importer&lt;br/&gt;   v_position        NUMBER; --postion du curseur&lt;br/&gt;   v_raw_chunk       RAW(10000); -- suite d&apos;octets&lt;br/&gt;   v_char      VARCHAR(2); --caractère lu (2 caractères pour les caractères spéciaux)&lt;br/&gt;   c_chunk_len   number       := 1;--compteur&lt;br/&gt;   v_line        VARCHAR2 (32767)        := NULL; --ligne à insérer dans la table temporaire&lt;br/&gt;   v_data_array      wwv_flow_global.vc_arr2; --tableau des données à insérer&lt;br/&gt;  &lt;br/&gt;   v_nb_col      number := 5; -- nombre de colonnes&lt;br/&gt;   v_cpt         number := 0; --compteur de lignes&lt;br/&gt;   v_cpt_col     number := 0; --compteur de colonnes&lt;br/&gt;   &lt;br/&gt;   tbl_not_exist     exception; &lt;br/&gt;   pragma            exception_init(tbl_not_exist, -942);&lt;br/&gt;   &lt;br/&gt;   /*** noms de colonnes ***/&lt;br/&gt;   v_ndi_construit varchar2(255) := &apos;NDI_CONSTRUIT&apos;;&lt;br/&gt;--v_via correspond au VIA_GTR&lt;br/&gt;   v_via varchar2(255) := &apos;VIA&apos;;&lt;br/&gt;   v_code_offre varchar2(255) := &apos;CODE_OFFRE&apos;;&lt;br/&gt;   v_plot varchar2(10) := &apos;PLOT&apos;;&lt;br/&gt;   v_nra varchar2(10) := &apos;NRA&apos;;&lt;br/&gt;   &lt;br/&gt; &lt;br/&gt;BEGIN&lt;br/&gt;-- suppression des elements de la table temporaire&lt;br/&gt;   EXECUTE IMMEDIATE &apos;TRUNCATE TABLE t_fdsl_upload_code_offre_temp&apos;;&lt;br/&gt;  &lt;br/&gt;  --recherche du fichier selectionne  (derniere mise a jour de la table wwv_flow_files effectuee par le user) &lt;br/&gt;   select blob_content into v_blob_data&lt;br/&gt;   from wwv_flow_files&lt;br/&gt;   where last_updated = (select max(last_updated) from wwv_flow_files where UPDATED_BY = v(&apos;APP_USER&apos;))&lt;br/&gt;   and id = (select max(id) from wwv_flow_files where updated_by = v(&apos;APP_USER&apos;));&lt;br/&gt;&lt;br/&gt;  --récupération de la longueur du fichier et éfinition de la position du curseur  &lt;br/&gt;   v_blob_len := dbms_lob.getlength(v_blob_data);&lt;br/&gt;   v_position := 1;&lt;br/&gt;  &lt;br/&gt;  --chargement du fichier et extraction des informations&lt;br/&gt;  WHILE ( v_position &lt;= v_blob_len ) LOOP&lt;br/&gt;  &lt;br/&gt;  --conversion binaire --&gt; char&lt;br/&gt;   v_raw_chunk := dbms_lob.substr(v_blob_data,c_chunk_len,v_position);&lt;br/&gt;   v_char :=  nchr(f_fdsl_hex_to_decimal(rawtohex(v_raw_chunk)));&lt;br/&gt;   &lt;br/&gt;   --insertion des caractères lus dans la ligne à insérer et incrémentation de la position du curseur&lt;br/&gt;   v_line := v_line || v_char;&lt;br/&gt;   v_position := v_position + c_chunk_len;&lt;br/&gt;   &lt;br/&gt;      --comptage du nombre de colonnes pour vérification&lt;br/&gt;   if (v_char = &apos;;&apos;) then&lt;br/&gt;      v_cpt_col := v_cpt_col + 1;&lt;br/&gt;   end if;&lt;br/&gt; --si le caractère lu est celui de fin de ligne,  &lt;br/&gt;   IF v_char = CHR(10) THEN&lt;br/&gt;   &lt;br/&gt;        --vérification du nombre de colonnes dans le fichier&lt;br/&gt;        v_cpt_col := v_cpt_col + 1;&lt;br/&gt;        if (v_cpt_col &lt;&gt; v_nb_col) then&lt;br/&gt;          &lt;br/&gt;          raise_application_error(-20152,&apos;Le nombre de colonnes ne correspond pas au nombre attendu. Attendu : &apos;||v_nb_col||&lt;br/&gt;                                    &apos; Effectif : &apos;||v_cpt_col);&lt;br/&gt;        end if;&lt;br/&gt;   &lt;br/&gt;        v_cpt_col := 0;&lt;br/&gt;   &lt;br/&gt;     --on remplace les séparateurs et on charge la ligne dans le tableau avant insertion.&lt;br/&gt;        v_line := REPLACE (v_line, &apos;;&apos;, &apos;:&apos;);&lt;br/&gt;        v_data_array := wwv_flow_utilities.string_to_table (v_line);&lt;br/&gt;            &lt;br/&gt;    --vérification des en-tête de colonnes dans le fichier&lt;br/&gt;        if (v_cpt = 0) then &lt;br/&gt;       &lt;br/&gt;        -- la première ligne correspond aux en-têtes de colonne&lt;br/&gt;           if ( (v_data_array(1) not like v_ndi_construit) or &lt;br/&gt;                (v_data_array(2) not like v_via) or&lt;br/&gt;                (v_data_array(3) not like v_code_offre) or&lt;br/&gt;                (v_data_array(4) not like v_plot) or&lt;br/&gt;                (v_data_array(5) not like v_nra||&apos;%&apos;)) then&lt;br/&gt;              raise_application_error (-20153, &apos;Les noms de colonnes ne correspondent pas aux noms attendus&apos;);&lt;br/&gt;          &lt;br/&gt;          end if; &lt;br/&gt;        &lt;br/&gt;       else&lt;br/&gt;      EXECUTE IMMEDIATE &apos;insert into t_fdsl_upload_code_offre_temp (NDI_CONSTRUIT,VIA,CODE_OFFRE,PLOT,NRA) &lt;br/&gt;                         values (:1, :2, :3,:4, :5)&apos;&lt;br/&gt;          USING  &lt;br/&gt;          v_data_array(1),&lt;br/&gt;          v_data_array(2),&lt;br/&gt;          v_data_array(3),&lt;br/&gt;              v_data_array(4),&lt;br/&gt;          v_data_array(5);&lt;br/&gt;      &lt;br/&gt;       end if;&lt;br/&gt;      v_line := NULL;&lt;br/&gt;      v_cpt := v_cpt + 1;&lt;br/&gt;   END IF;&lt;br/&gt; END LOOP;&lt;br/&gt; &lt;br/&gt;/* begin&lt;br/&gt;&lt;br/&gt;  delete from t_sdsl_upload_code_offre_temp where NDI_CONSTRUIT = v_ndi_construit;&lt;br/&gt;&lt;br/&gt; exception &lt;br/&gt;  when tbl_not_exist then null;&lt;br/&gt;  when no_data_found then null;&lt;br/&gt; &lt;br/&gt; end;*/&lt;br/&gt;END;</source>
<body>CREATE OR REPLACE PROCEDURE                    AXIONEUSER_FACTU.PROC_FDSL_UPLOAD_CODE_OFFRE AS&lt;br/&gt;&lt;br/&gt;/**************************************************************&lt;br/&gt;  * PROCEDURE D&apos;IMPORTATION DE DONNEES CONTENUES DANS UN FICHIER CSV&lt;br/&gt;  * VERS LA TABLE TEMPORAIRE t_sdsl_upload_code_offre_temp.&lt;br/&gt;  *&lt;br/&gt;  * Auteur : Olivier Mourissoux, Septembre 2008&lt;br/&gt;  * Dernière mise à jour : Pascal Spinat, le 27/10/2009&lt;br/&gt;  *&lt;br/&gt;  * e-mail : olivier.mourissoux@sogeti.com&lt;br/&gt;  ***************************************************************/&lt;br/&gt;  &lt;br/&gt;   v_blob_data   BLOB; --fichier à importer&lt;br/&gt;   v_blob_len        NUMBER; --longueur du fichier à importer&lt;br/&gt;   v_position        NUMBER; --postion du curseur&lt;br/&gt;   v_raw_chunk       RAW(10000); -- suite d&apos;octets&lt;br/&gt;   v_char      VARCHAR(2); --caractère lu (2 caractères pour les caractères spéciaux)&lt;br/&gt;   c_chunk_len   number       := 1;--compteur&lt;br/&gt;   v_line        VARCHAR2 (32767)        := NULL; --ligne à insérer dans la table temporaire&lt;br/&gt;   v_data_array      wwv_flow_global.vc_arr2; --tableau des données à insérer&lt;br/&gt;  &lt;br/&gt;   v_nb_col      number := 5; -- nombre de colonnes&lt;br/&gt;   v_cpt         number := 0; --compteur de lignes&lt;br/&gt;   v_cpt_col     number := 0; --compteur de colonnes&lt;br/&gt;   &lt;br/&gt;   tbl_not_exist     exception; &lt;br/&gt;   pragma            exception_init(tbl_not_exist, -942);&lt;br/&gt;   &lt;br/&gt;   /*** noms de colonnes ***/&lt;br/&gt;   v_ndi_construit varchar2(255) := &apos;NDI_CONSTRUIT&apos;;&lt;br/&gt;--v_via correspond au VIA_GTR&lt;br/&gt;   v_via varchar2(255) := &apos;VIA&apos;;&lt;br/&gt;   v_code_offre varchar2(255) := &apos;CODE_OFFRE&apos;;&lt;br/&gt;   v_plot varchar2(10) := &apos;PLOT&apos;;&lt;br/&gt;   v_nra varchar2(10) := &apos;NRA&apos;;&lt;br/&gt;   &lt;br/&gt; &lt;br/&gt;BEGIN&lt;br/&gt;-- suppression des elements de la table temporaire&lt;br/&gt;   EXECUTE IMMEDIATE &apos;TRUNCATE TABLE t_fdsl_upload_code_offre_temp&apos;;&lt;br/&gt;  &lt;br/&gt;  --recherche du fichier selectionne  (derniere mise a jour de la table wwv_flow_files effectuee par le user) &lt;br/&gt;   select blob_content into v_blob_data&lt;br/&gt;   from wwv_flow_files&lt;br/&gt;   where last_updated = (select max(last_updated) from wwv_flow_files where UPDATED_BY = v(&apos;APP_USER&apos;))&lt;br/&gt;   and id = (select max(id) from wwv_flow_files where updated_by = v(&apos;APP_USER&apos;));&lt;br/&gt;&lt;br/&gt;  --récupération de la longueur du fichier et éfinition de la position du curseur  &lt;br/&gt;   v_blob_len := dbms_lob.getlength(v_blob_data);&lt;br/&gt;   v_position := 1;&lt;br/&gt;  &lt;br/&gt;  --chargement du fichier et extraction des informations&lt;br/&gt;  WHILE ( v_position &lt;= v_blob_len ) LOOP&lt;br/&gt;  &lt;br/&gt;  --conversion binaire --&gt; char&lt;br/&gt;   v_raw_chunk := dbms_lob.substr(v_blob_data,c_chunk_len,v_position);&lt;br/&gt;   v_char :=  nchr(f_fdsl_hex_to_decimal(rawtohex(v_raw_chunk)));&lt;br/&gt;   &lt;br/&gt;   --insertion des caractères lus dans la ligne à insérer et incrémentation de la position du curseur&lt;br/&gt;   v_line := v_line || v_char;&lt;br/&gt;   v_position := v_position + c_chunk_len;&lt;br/&gt;   &lt;br/&gt;      --comptage du nombre de colonnes pour vérification&lt;br/&gt;   if (v_char = &apos;;&apos;) then&lt;br/&gt;      v_cpt_col := v_cpt_col + 1;&lt;br/&gt;   end if;&lt;br/&gt; --si le caractère lu est celui de fin de ligne,  &lt;br/&gt;   IF v_char = CHR(10) THEN&lt;br/&gt;   &lt;br/&gt;        --vérification du nombre de colonnes dans le fichier&lt;br/&gt;        v_cpt_col := v_cpt_col + 1;&lt;br/&gt;        if (v_cpt_col &lt;&gt; v_nb_col) then&lt;br/&gt;          &lt;br/&gt;          raise_application_error(-20152,&apos;Le nombre de colonnes ne correspond pas au nombre attendu. Attendu : &apos;||v_nb_col||&lt;br/&gt;                                    &apos; Effectif : &apos;||v_cpt_col);&lt;br/&gt;        end if;&lt;br/&gt;   &lt;br/&gt;        v_cpt_col := 0;&lt;br/&gt;   &lt;br/&gt;     --on remplace les séparateurs et on charge la ligne dans le tableau avant insertion.&lt;br/&gt;        v_line := REPLACE (v_line, &apos;;&apos;, &apos;:&apos;);&lt;br/&gt;        v_data_array := wwv_flow_utilities.string_to_table (v_line);&lt;br/&gt;            &lt;br/&gt;    --vérification des en-tête de colonnes dans le fichier&lt;br/&gt;        if (v_cpt = 0) then &lt;br/&gt;       &lt;br/&gt;        -- la première ligne correspond aux en-têtes de colonne&lt;br/&gt;           if ( (v_data_array(1) not like v_ndi_construit) or &lt;br/&gt;                (v_data_array(2) not like v_via) or&lt;br/&gt;                (v_data_array(3) not like v_code_offre) or&lt;br/&gt;                (v_data_array(4) not like v_plot) or&lt;br/&gt;                (v_data_array(5) not like v_nra||&apos;%&apos;)) then&lt;br/&gt;              raise_application_error (-20153, &apos;Les noms de colonnes ne correspondent pas aux noms attendus&apos;);&lt;br/&gt;          &lt;br/&gt;          end if; &lt;br/&gt;        &lt;br/&gt;       else&lt;br/&gt;      EXECUTE IMMEDIATE &apos;insert into t_fdsl_upload_code_offre_temp (NDI_CONSTRUIT,VIA,CODE_OFFRE,PLOT,NRA) &lt;br/&gt;                         values (:1, :2, :3,:4, :5)&apos;&lt;br/&gt;          USING  &lt;br/&gt;          v_data_array(1),&lt;br/&gt;          v_data_array(2),&lt;br/&gt;          v_data_array(3),&lt;br/&gt;              v_data_array(4),&lt;br/&gt;          v_data_array(5);&lt;br/&gt;      &lt;br/&gt;       end if;&lt;br/&gt;      v_line := NULL;&lt;br/&gt;      v_cpt := v_cpt + 1;&lt;br/&gt;   END IF;&lt;br/&gt; END LOOP;&lt;br/&gt; &lt;br/&gt;/* begin&lt;br/&gt;&lt;br/&gt;  delete from t_sdsl_upload_code_offre_temp where NDI_CONSTRUIT = v_ndi_construit;&lt;br/&gt;&lt;br/&gt; exception &lt;br/&gt;  when tbl_not_exist then null;&lt;br/&gt;  when no_data_found then null;&lt;br/&gt; &lt;br/&gt; end;*/&lt;br/&gt;END;</body>
</StoredProcedureOraclev10g>